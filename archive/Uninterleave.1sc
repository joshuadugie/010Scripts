//------------------------------------------------
//--- 010 Editor v3.1.2 Script File
//
//      File: Uninterleave.1sc
//   Authors: SweetScape Software 
//   Version: 1.1
//   Purpose: When given an interleaved file, this script 
//            creates two files by separating the interleaved data. 
//            See Interleave.1sc for the reverse operation.
//  Category: Binary
//   History: 
//   1.1   2016-02-10 SweetScape Software: Updated header for repository submission.
//   1.0   SweetScape Software: Initial release.
//
// When run on a file, this script
// separates the file into two separate
// files. If the original file is of
// the form 'ABABAB...', the two files that
// are written are the form 'AAA...' and
// 'BBB...'. The size of each element
// can be specified. See the Interleave.1sc
// script to recombine the file.
//------------------------------------------------

// Define local variables
const int  DEFAULT_ELEMENT_SIZE = 1;
const char DEFAULT_EXTENSION_1[] = "-1";
const char DEFAULT_EXTENSION_2[] = "-2";
const int  BLOCK_SIZE = 16384;
const char SCRIPT_NAME[] = "Uninterleave";
uchar      srcBuffer[BLOCK_SIZE], buf1[BLOCK_SIZE], buf2[BLOCK_SIZE];
char       filename1[512], filename2[512], str[128];
int        pos, pos1, pos2, i, blocksize, size, which, len, elementpos, elementsize;
int        srcFileNum, file1Num, file2Num;

// Check that a file is open
if( FileCount() == 0 )
{
    MessageBox( idOk, SCRIPT_NAME, "Uninterleave can only be executed when a file is loaded." );
    return -1;
}

// Get the filename of the first output file
filename1 = InputSaveFileName( "Choose First Output File Name", "All files (*.*)|*.*", GetFileName() + DEFAULT_EXTENSION_1 );
len       = Strlen( filename1 );
if( len == 0 )
    return -1;

// Get the filename of the second output file
filename2 = InputSaveFileName( "Choose Second Output File Name", "All files (*.*)|*.*", GetFileName() + DEFAULT_EXTENSION_2 );
len       = Strlen( filename2 );
if( len == 0 )
    return -1;

// Input size of each file
SPrintf( str, "%d", DEFAULT_ELEMENT_SIZE );
elementsize = InputNumber( SCRIPT_NAME, "Enter the size of each element in the file:", str );
if( elementsize == BAD_VALUE )
    return -1;

// Check that size is valid
if( (elementsize <= 0) || (elementsize > 65535) )
{
    MessageBox( idOk, SCRIPT_NAME, "Invalid element size." );
    return -1;
}

// Check that file is not the same as the source
if( (filename1 == GetFileName()) || (filename2 == GetFileName()) )
{
    MessageBox( idOk, SCRIPT_NAME, "File to write must be different than the source filename." );
    return -1;
}
if( filename1 == filename2 )
{
    MessageBox( idOk, SCRIPT_NAME, "Output files must have different names." );
    return -1;
}

// Separate file into a two parts
pos        = 0;
size       = FileSize();
srcFileNum = GetFileNum();
file1Num   = FileNew();
file2Num   = FileNew();
which      = 0;
elementpos = elementsize;
while( size > 0 )
{
    // Read data from the source file
    FileSelect( srcFileNum );
    blocksize = Min( BLOCK_SIZE, size );
    ReadBytes( srcBuffer, pos, blocksize );

    // Separate into arrays
    pos1 = pos2 = 0;
    for( i = 0; i < blocksize; i++ )
    {
        if( which == 0 )
            buf1[pos1++] = srcBuffer[i];
        else
            buf2[pos2++] = srcBuffer[i];
        if( --elementpos == 0 )
        {
            which      = !which;
            elementpos = elementsize;
        }
    }        

    // Write the arrays
    FileSelect( file1Num );
    WriteBytes( buf1, FileSize(), pos1 );
    FileSelect( file2Num );
    WriteBytes( buf2, FileSize(), pos2 );

    // Update the file positions
    size -= blocksize;
    pos  += blocksize;
}

// Save the new files to disk
FileSelect( file1Num );
if( FileSave( filename1 ) < 0 )
{
    MessageBox( idOk, SCRIPT_NAME, "An error occurred writing file '%s'.", filename1 );
    return -1;
}
FileSelect( file2Num );
if( FileSave( filename2 ) < 0 )
{
    MessageBox( idOk, SCRIPT_NAME, "An error occurred writing file '%s'.", filename2 );
    return -1;
}
FileSelect( srcFileNum );
